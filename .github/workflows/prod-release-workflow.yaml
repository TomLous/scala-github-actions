name: 'Automatic: Deploy to PROD'

on:
  pull_request:
    types: [closed]

jobs:
  release-prod:
    name: Release to Prod
    runs-on: ubuntu-latest

    # If merged & pr was tagged release & from a release branch
    if: contains(github.event.pull_request.labels.*.name, 'release') && github.event.pull_request.merged == true && (github.event.pull_request.head.ref == 'release' || github.event.pull_request.head.ref == 'hotfix')

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v10

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Package code
        shell: bash
        run: make package

      - name: Set variables
        id: vars
        run: echo ::set-output name=version::$(make version)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ steps.vars.outputs.version }}.jar
          path: output/assembly.jar

      - name: Deploy to PROD
        shell: bash
        run: make deploy-to-prod

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.vars.outputs.version }}
          release_name: Release ${{ steps.vars.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release asset (.jar)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/assembly.jar
          asset_name: ${{ github.event.repository.name }}-${{ steps.vars.outputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Deploy notification
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          username: 'github actions'
          author_name: ''
          icon_emoji: ':github:'
          status: ${{ job.status }}
          fields:
          text: ":rocket: ${{ github.event.repository.name }} *v${{ steps.vars.outputs.version }}* deployed to *PROD*\n\n:arrow_right: <https://github.com/${{ github.repository }}/releases/tag/v${{ steps.vars.outputs.version }}|Check Release>"

      - name: Delete current release/hotfix branch
        uses: dawidd6/action-delete-branch@v3
        continue-on-error: true
        with:
          github_token: ${{github.token}}
          branches: ${{ github.event.pull_request.head.ref}}

      - name: Slack on error
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          username: 'github actions'
          author_name: ''
          icon_emoji: ':github:'
          text: ":x: The workflow `${{ github.workflow }}` triggered by `${{ github.event_name }}` failed\n\n:arrow_right: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|See Log>"
          status: ${{ job.status }}
          fields: repo,message,commit,action
        if: ${{ failure() }}
